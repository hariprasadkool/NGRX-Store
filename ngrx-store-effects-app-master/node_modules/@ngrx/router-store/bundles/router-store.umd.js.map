{"version":3,"file":"router-store.umd.js","sources":["../../../modules/router-store/src/router_store_module.ts","../../../modules/router-store/src/serializer.ts"],"sourcesContent":["import {\n  NgModule,\n  ModuleWithProviders,\n  InjectionToken,\n  Inject,\n} from '@angular/core';\nimport {\n  NavigationCancel,\n  NavigationError,\n  Router,\n  RouterStateSnapshot,\n  RoutesRecognized,\n} from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs/observable/of';\nimport {\n  DefaultRouterStateSerializer,\n  RouterStateSerializer,\n} from './serializer';\n/**\n * An action dispatched when the router navigates.\n */\nexport const ROUTER_NAVIGATION = 'ROUTER_NAVIGATION';\n\n/**\n * Payload of ROUTER_NAVIGATION.\n */\nexport type RouterNavigationPayload<T> = {\n  routerState: T;\n  event: RoutesRecognized;\n};\n\n/**\n * An action dispatched when the router navigates.\n */\nexport type RouterNavigationAction<T = RouterStateSnapshot> = {\n  type: typeof ROUTER_NAVIGATION;\n  payload: RouterNavigationPayload<T>;\n};\n/**\n * An action dispatched when the router cancels navigation.\n */\nexport const ROUTER_CANCEL = 'ROUTER_CANCEL';\n\n/**\n * Payload of ROUTER_CANCEL.\n */\nexport type RouterCancelPayload<T, V> = {\n  routerState: V;\n  storeState: T;\n  event: NavigationCancel;\n};\n\n/**\n * An action dispatched when the router cancel navigation.\n */\nexport type RouterCancelAction<T, V = RouterStateSnapshot> = {\n  type: typeof ROUTER_CANCEL;\n  payload: RouterCancelPayload<T, V>;\n};\n/**\n * An action dispatched when the router errors.\n */\nexport const ROUTER_ERROR = 'ROUTE_ERROR';\n\n/**\n * Payload of ROUTER_ERROR.\n */\nexport type RouterErrorPayload<T, V> = {\n  routerState: V;\n  storeState: T;\n  event: NavigationError;\n};\n\n/**\n * An action dispatched when the router errors.\n */\nexport type RouterErrorAction<T, V = RouterStateSnapshot> = {\n  type: typeof ROUTER_ERROR;\n  payload: RouterErrorPayload<T, V>;\n};\n\n/**\n * An union type of router actions.\n */\nexport type RouterAction<T, V = RouterStateSnapshot> =\n  | RouterNavigationAction<T>\n  | RouterCancelAction<T, V>\n  | RouterErrorAction<T, V>;\n\nexport type RouterReducerState<T = RouterStateSnapshot> = {\n  state: T;\n  navigationId: number;\n};\n/**\n * @template T\n * @param {?} state\n * @param {?} action\n * @return {?}\n */\nexport function routerReducer<T = RouterStateSnapshot>(\n  state: RouterReducerState<T>,\n  action: RouterAction<any>\n): RouterReducerState<T> {\n  switch (action.type) {\n    case ROUTER_NAVIGATION:\n    case ROUTER_ERROR:\n    case ROUTER_CANCEL:\n      return {\n        state: action.payload.routerState,\n        navigationId: action.payload.event.id,\n      };\n    default:\n      return state;\n  }\n}\n\nexport type StoreRouterConfig = {\n  stateKey?: string;\n};\n\nexport const /** @type {?} */ _ROUTER_CONFIG = new InjectionToken(\n  '@ngrx/router-store Internal Configuration'\n);\nexport const /** @type {?} */ ROUTER_CONFIG = new InjectionToken(\n  '@ngrx/router-store Configuration'\n);\nexport const /** @type {?} */ DEFAULT_ROUTER_FEATURENAME = 'routerReducer';\n/**\n * @param {?} config\n * @return {?}\n */\nexport function _createDefaultRouterConfig(config: any): StoreRouterConfig {\n  let /** @type {?} */ _config = {};\n\n  if (typeof config === 'function') {\n    _config = config();\n  }\n\n  return {\n    stateKey: DEFAULT_ROUTER_FEATURENAME,\n    ..._config,\n  };\n}\n\nexport type StoreRouterConfigFunction = () => StoreRouterConfig;\n/**\n * Connects RouterModule with StoreModule.\n * \n * During the navigation, before any guards or resolvers run, the router will dispatch\n * a ROUTER_NAVIGATION action, which has the following signature:\n * \n * ```\n * export type RouterNavigationPayload = {\n *   routerState: RouterStateSnapshot,\n *   event: RoutesRecognized\n * }\n * ```\n * \n * Either a reducer or an effect can be invoked in response to this action.\n * If the invoked reducer throws, the navigation will be canceled.\n * \n * If navigation gets canceled because of a guard, a ROUTER_CANCEL action will be\n * dispatched. If navigation results in an error, a ROUTER_ERROR action will be dispatched.\n * \n * Both ROUTER_CANCEL and ROUTER_ERROR contain the store state before the navigation\n * which can be used to restore the consistency of the store.\n * \n * Usage:\n * \n * ```typescript\n * \\@NgModule({ \n *   declarations: [AppCmp, SimpleCmp],\n *   imports: [\n *     BrowserModule,\n *     StoreModule.forRoot(mapOfReducers),\n *     RouterModule.forRoot([\n *       { path: '', component: SimpleCmp },\n *       { path: 'next', component: SimpleCmp }\n *     ]),\n *     StoreRouterConnectingModule\n *   ],\n *   bootstrap: [AppCmp]\n * })\n * export class AppModule {\n * }\n * ```\n */\nexport class StoreRouterConnectingModule {\n  static forRoot(\n    config?: StoreRouterConfig | StoreRouterConfigFunction\n  ): ModuleWithProviders;\n/**\n * @param {?=} config\n * @return {?}\n */\nstatic forRoot(\n    config: StoreRouterConfig | StoreRouterConfigFunction = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: StoreRouterConnectingModule,\n      providers: [\n        { provide: _ROUTER_CONFIG, useValue: config },\n        {\n          provide: ROUTER_CONFIG,\n          useFactory: _createDefaultRouterConfig,\n          deps: [_ROUTER_CONFIG],\n        },\n      ],\n    };\n  }\nprivate routerState: RouterStateSnapshot;\nprivate storeState: any;\nprivate lastRoutesRecognized: RoutesRecognized;\nprivate dispatchTriggeredByRouter: boolean = false;\nprivate navigationTriggeredByDispatch: boolean = false;\nprivate stateKey: string;\n/**\n * @param {?} store\n * @param {?} router\n * @param {?} serializer\n * @param {?} config\n */\nconstructor(\nprivate store: Store<any>,\nprivate router: Router,\nprivate serializer: RouterStateSerializer<RouterStateSnapshot>,\nprivate config: StoreRouterConfig\n  ) {\n    this.stateKey = this.config.stateKey as string;\n\n    this.setUpBeforePreactivationHook();\n    this.setUpStoreStateListener();\n    this.setUpStateRollbackEvents();\n  }\n/**\n * @return {?}\n */\nprivate setUpBeforePreactivationHook(): void {\n    ( /** @type {?} */((<any>this.router))).hooks.beforePreactivation = (\n      routerState: RouterStateSnapshot\n    ) => {\n      this.routerState = this.serializer.serialize(routerState);\n      if (this.shouldDispatchRouterNavigation())\n        this.dispatchRouterNavigation();\n      return of(true);\n    };\n  }\n/**\n * @return {?}\n */\nprivate setUpStoreStateListener(): void {\n    this.store.subscribe(s => {\n      this.storeState = s;\n    });\n    this.store.select(this.stateKey).subscribe(() => {\n      this.navigateIfNeeded();\n    });\n  }\n/**\n * @return {?}\n */\nprivate shouldDispatchRouterNavigation(): boolean {\n    if (!this.storeState[this.stateKey]) return true;\n    return !this.navigationTriggeredByDispatch;\n  }\n/**\n * @return {?}\n */\nprivate navigateIfNeeded(): void {\n    if (\n      !this.storeState[this.stateKey] ||\n      !this.storeState[this.stateKey].state\n    ) {\n      return;\n    }\n    if (this.dispatchTriggeredByRouter) return;\n\n    if (this.router.url !== this.storeState[this.stateKey].state.url) {\n      this.navigationTriggeredByDispatch = true;\n      this.router.navigateByUrl(this.storeState[this.stateKey].state.url);\n    }\n  }\n/**\n * @return {?}\n */\nprivate setUpStateRollbackEvents(): void {\n    this.router.events.subscribe(e => {\n      if (e instanceof RoutesRecognized) {\n        this.lastRoutesRecognized = e;\n      } else if (e instanceof NavigationCancel) {\n        this.dispatchRouterCancel(e);\n      } else if (e instanceof NavigationError) {\n        this.dispatchRouterError(e);\n      }\n    });\n  }\n/**\n * @return {?}\n */\nprivate dispatchRouterNavigation(): void {\n    this.dispatchRouterAction(ROUTER_NAVIGATION, {\n      routerState: this.routerState,\n      event: new RoutesRecognized(\n        this.lastRoutesRecognized.id,\n        this.lastRoutesRecognized.url,\n        this.lastRoutesRecognized.urlAfterRedirects,\n        this.routerState\n      ),\n    });\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate dispatchRouterCancel(event: NavigationCancel): void {\n    this.dispatchRouterAction(ROUTER_CANCEL, {\n      routerState: this.routerState,\n      storeState: this.storeState,\n      event,\n    });\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate dispatchRouterError(event: NavigationError): void {\n    this.dispatchRouterAction(ROUTER_ERROR, {\n      routerState: this.routerState,\n      storeState: this.storeState,\n      event: new NavigationError(event.id, event.url, `${event}`),\n    });\n  }\n/**\n * @param {?} type\n * @param {?} payload\n * @return {?}\n */\nprivate dispatchRouterAction(type: string, payload: any): void {\n    this.dispatchTriggeredByRouter = true;\n    try {\n      this.store.dispatch({ type, payload });\n    } finally {\n      this.dispatchTriggeredByRouter = false;\n      this.navigationTriggeredByDispatch = false;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    { provide: RouterStateSerializer, useClass: DefaultRouterStateSerializer },\n    {\n      provide: _ROUTER_CONFIG,\n      useValue: { stateKey: DEFAULT_ROUTER_FEATURENAME },\n    },\n    {\n      provide: ROUTER_CONFIG,\n      useFactory: _createDefaultRouterConfig,\n      deps: [_ROUTER_CONFIG],\n    },\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Store, },\n{type: Router, },\n{type: RouterStateSerializer, },\n{type: undefined, decorators: [{ type: Inject, args: [ROUTER_CONFIG, ] }, ]},\n];\n}\n\nfunction StoreRouterConnectingModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStoreRouterConnectingModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStoreRouterConnectingModule.ctorParameters;\n/** @type {?} */\nStoreRouterConnectingModule.prototype.routerState;\n/** @type {?} */\nStoreRouterConnectingModule.prototype.storeState;\n/** @type {?} */\nStoreRouterConnectingModule.prototype.lastRoutesRecognized;\n/** @type {?} */\nStoreRouterConnectingModule.prototype.dispatchTriggeredByRouter;\n/** @type {?} */\nStoreRouterConnectingModule.prototype.navigationTriggeredByDispatch;\n/** @type {?} */\nStoreRouterConnectingModule.prototype.stateKey;\n/** @type {?} */\nStoreRouterConnectingModule.prototype.store;\n/** @type {?} */\nStoreRouterConnectingModule.prototype.router;\n/** @type {?} */\nStoreRouterConnectingModule.prototype.serializer;\n/** @type {?} */\nStoreRouterConnectingModule.prototype.config;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InjectionToken } from '@angular/core';\nimport { RouterStateSnapshot } from '@angular/router';\n/**\n * @abstract\n */\nexport abstract class RouterStateSerializer<T> {\n/**\n * @abstract\n * @param {?} routerState\n * @return {?}\n */\nserialize(routerState: RouterStateSnapshot) {}\n}\nexport class DefaultRouterStateSerializer\n  implements RouterStateSerializer<RouterStateSnapshot> {\n/**\n * @param {?} routerState\n * @return {?}\n */\nserialize(routerState: RouterStateSnapshot) {\n    return routerState;\n  }\n}\n"],"names":["Inject","Router","Store","NgModule","NavigationError","RoutesRecognized","NavigationCancel","of","router","store","InjectionToken"],"mappings":"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"}